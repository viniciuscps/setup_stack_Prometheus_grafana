---
- hosts: localhost
  vars:
    node_exporter_version: 0.16.0
    prometheus_version: 2.2.1
    grafana_rpm: https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.1.3-1.x86_64.rpm
  tasks:

  - name: create prometheus group
    group:
      name: prometheus

  - name: create prometheus user
    user:
      name: prometheus
      group: prometheus

  - name: download latest version of node exporter
    get_url:
      url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
      dest: /home/prometheus/node_exporter-{{ node_exporter_version }}.tgz
    become_user: prometheus

  - name: unarchive node exporter
    unarchive:
      src: /home/prometheus/node_exporter-{{ node_exporter_version }}.tgz
      dest: /home/prometheus
      owner: prometheus
    creates: /home/prometheus/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter

  - name: remove node exporter tarball
    file:
      dest: /home/prometheus/node_exporter-{{ node_exporter_version }}.tgz
      state: absent

  - name: create node exporter systemd unit file
    shell: |
      echo "[Unit]
            Description=Node exporter
            Requires=network-online.target
            After=network.target network-online.target multi-user.target
 
            [Service]
            User=prometheus
            ExecStart=/home/prometheus/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter --collector.textfile.directory=/var/lib/node_exporter/metrics
            Restart=on-failure

            [Install]
            WantedBy=default.target" > /etc/systemd/system/node_exporter.service
    args:
      creates: /etc/systemd/system/node_exporter.service

  - name: set node exporter to be enabled at boot
    systemd:
      name: node_exporter
      enabled: yes
      state: started
      daemon_reload: yes

  - name: download latest version of prometheus
    get_url:
      url: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
      dest: /home/prometheus/prometheus-{{ prometheus_version }}.tgz
    become_user: prometheus

  - name: unarchive prometheus
    unarchive:
      src: /home/prometheus/prometheus-{{ prometheus_version }}.tgz
      dest: /home/prometheus
      owner: prometheus
    creates: /home/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/prometheus

  - name: remove node exporter tarball
    file:
      dest: /home/prometheus/prometheus-{{ prometheus_version }}.tgz
      state: absent
    become_user: prometheus

  - name: create prometheus systemd unit file
    shell: |
      echo "[Unit]
            Description=Prometheus
            Requires=network-online.target
            After=network.target network-online.target multi-user.target
 
            [Service]
            User=prometheus
            ExecStart=/home/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/prometheus --config.file=/home/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml --storage.tsdb.path=/home/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/data
            Restart=on-failure

            [Install]
            WantedBy=default.target" > /etc/systemd/system/prometheus.service
    args:
      creates: /etc/systemd/system/prometheus.service

  - name: create scrape config for prometheus
    shell: >
      printf "scrape_configs:\n\n  - job_name: 'prometheus'\n    scrape_interval: 1s\n    static_configs:\n      - targets: ['localhost:9090']\n\n  - job_name: 'node_exporter'\n    scrape_interval: 1s\n    static_configs:\n      - targets: ['localhost:9100']" > /home/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml
    become_user: prometheus
     

  - name: set prometheus to be enabled at boot
    systemd:
      name: prometheus
      enabled: yes
      state: started
      daemon_reload: yes

  - name: install grafana
    yum:
      name: "{{ grafana_rpm }}"
      state: installed

  - name: set grafana to be enabled at boot
    systemd:
      name: grafana-server
      enabled: yes
      state: started
      daemon_reload: yes
